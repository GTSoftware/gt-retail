[{"/home/rodrigo/UI_Projects/gt-retail/webapp/src/index.js":"1","/home/rodrigo/UI_Projects/gt-retail/webapp/src/App.js":"2","/home/rodrigo/UI_Projects/gt-retail/webapp/src/ScrollToTop.js":"3","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/LoginService.js":"4","/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppTopbar.js":"5","/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppMenu.js":"6","/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppFooter.js":"7","/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppProfile.js":"8","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/Login.js":"9","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/UsersList.js":"10","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/PageNotFound.js":"11","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCart.js":"12","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/dashboard/GTDashboard.js":"13","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/delivery-note/ManualDeliveryNote.js":"14","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/delivery-note/SearchDeliveryNotes.js":"15","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/pricing/BatchPricing.js":"16","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/stock/ProductHistory.js":"17","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/SearchSales.js":"18","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/ViewSale.js":"19","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/report/SalesByProductReport.js":"20","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/payment/SearchPendingSales.js":"21","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/fiscal/FiscalBooks.js":"22","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/products/ProductsInventory.js":"23","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/ProductsService.js":"24","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/FiscalBookService.js":"25","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/payment/PayDialog.js":"26","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/PaymentPendingSalesService.js":"27","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/ShopCartService.js":"28","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/LoadingButton.js":"29","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchProductsFilter.js":"30","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/DateUtils.js":"31","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/FileOutputsService.js":"32","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/DefaultProps.js":"33","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/ReportsService.js":"34","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/InvoiceDialog.js":"35","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/SalesService.js":"36","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/payment/CashSaleToPay.js":"37","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/AutocompleteProductFilter.js":"38","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/StockService.js":"39","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/DeliveryNotesService.js":"40","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/pricing/AddPercentDialog.js":"41","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchProductsTable.js":"42","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchProductsDialog.js":"43","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/DashboardService.js":"44","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartConfirmation.js":"45","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartPayment.js":"46","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartCustomer.js":"47","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartItems.js":"48","/home/rodrigo/UI_Projects/gt-retail/webapp/src/stores/ShopCartStore.js":"49","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/AddNewCustomerDialog.js":"50","/home/rodrigo/UI_Projects/gt-retail/webapp/src/stores/SessionStore.js":"51","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/SucursalesService.js":"52","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/UsersService.js":"53","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/CustomersService.js":"54","/home/rodrigo/UI_Projects/gt-retail/webapp/src/custom-error-form.messages.js":"55","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/StringUtils.js":"56","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/CategoriesSelector.js":"57","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SubCategoriesSelector.js":"58","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/BrandsSelector.js":"59","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/BrandsService.js":"60","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/AutocompleteSupplierFilter.js":"61","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/SuppliersService.js":"62","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/CategoriesService.js":"63","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/products/ProductDetails.js":"64","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/FiscalTaxRateService.js":"65","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/FiscalTaxRateSelector.js":"66","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/Logger.js":"67","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/HTTPService.js":"68","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/PercentTypesSelector.js":"69","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/PriceListSelector.js":"70","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/ExcelExporter.js":"71","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/ExportSalesUtils.js":"72","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/ProductSupplyTypeSelector.js":"73","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/ProductUnitTypeSelector.js":"74","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchPersonsFilter.js":"75","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/customers/CustomersInventory.js":"76","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/customers/CustomerDetails.js":"77"},{"size":630,"mtime":1616886877808,"results":"78","hashOfConfig":"79"},{"size":12667,"mtime":1652291966415,"results":"80","hashOfConfig":"79"},{"size":336,"mtime":1616886877793,"results":"81","hashOfConfig":"79"},{"size":1201,"mtime":1642213232929,"results":"82","hashOfConfig":"79"},{"size":1959,"mtime":1616886877793,"results":"83","hashOfConfig":"79"},{"size":3294,"mtime":1616886877793,"results":"84","hashOfConfig":"79"},{"size":516,"mtime":1616886877793,"results":"85","hashOfConfig":"79"},{"size":1860,"mtime":1616886877793,"results":"86","hashOfConfig":"79"},{"size":3405,"mtime":1652389891530,"results":"87","hashOfConfig":"79"},{"size":7504,"mtime":1619181117477,"results":"88","hashOfConfig":"79"},{"size":439,"mtime":1651437005854,"results":"89","hashOfConfig":"79"},{"size":2858,"mtime":1616886877807,"results":"90","hashOfConfig":"79"},{"size":6199,"mtime":1619180401328,"results":"91","hashOfConfig":"79"},{"size":19349,"mtime":1619131997752,"results":"92","hashOfConfig":"79"},{"size":6313,"mtime":1616886877802,"results":"93","hashOfConfig":"79"},{"size":12673,"mtime":1623379321715,"results":"94","hashOfConfig":"79"},{"size":5862,"mtime":1616886877808,"results":"95","hashOfConfig":"79"},{"size":11496,"mtime":1625939362486,"results":"96","hashOfConfig":"79"},{"size":5685,"mtime":1652389180905,"results":"97","hashOfConfig":"79"},{"size":4102,"mtime":1652302321413,"results":"98","hashOfConfig":"79"},{"size":12171,"mtime":1616886877803,"results":"99","hashOfConfig":"79"},{"size":3865,"mtime":1619137753750,"results":"100","hashOfConfig":"79"},{"size":4574,"mtime":1652301918725,"results":"101","hashOfConfig":"79"},{"size":4069,"mtime":1642100958144,"results":"102","hashOfConfig":"79"},{"size":940,"mtime":1619181117635,"results":"103","hashOfConfig":"79"},{"size":3354,"mtime":1616886877803,"results":"104","hashOfConfig":"79"},{"size":548,"mtime":1619181117708,"results":"105","hashOfConfig":"79"},{"size":1861,"mtime":1622689384824,"results":"106","hashOfConfig":"79"},{"size":738,"mtime":1645388480217,"results":"107","hashOfConfig":"79"},{"size":7056,"mtime":1652388990999,"results":"108","hashOfConfig":"79"},{"size":710,"mtime":1616886877814,"results":"109","hashOfConfig":"79"},{"size":438,"mtime":1619181117614,"results":"110","hashOfConfig":"79"},{"size":120,"mtime":1616886877795,"results":"111","hashOfConfig":"79"},{"size":208,"mtime":1619181117730,"results":"112","hashOfConfig":"79"},{"size":2860,"mtime":1652389148847,"results":"113","hashOfConfig":"79"},{"size":714,"mtime":1619181117745,"results":"114","hashOfConfig":"79"},{"size":2072,"mtime":1616886877803,"results":"115","hashOfConfig":"79"},{"size":2373,"mtime":1616886877799,"results":"116","hashOfConfig":"79"},{"size":245,"mtime":1619181117776,"results":"117","hashOfConfig":"79"},{"size":2344,"mtime":1619181117593,"results":"118","hashOfConfig":"79"},{"size":4311,"mtime":1623379790013,"results":"119","hashOfConfig":"79"},{"size":3194,"mtime":1616886877800,"results":"120","hashOfConfig":"79"},{"size":7225,"mtime":1616886877800,"results":"121","hashOfConfig":"79"},{"size":472,"mtime":1619181117575,"results":"122","hashOfConfig":"79"},{"size":2598,"mtime":1619181117146,"results":"123","hashOfConfig":"79"},{"size":19487,"mtime":1623197313550,"results":"124","hashOfConfig":"79"},{"size":5553,"mtime":1651436992261,"results":"125","hashOfConfig":"79"},{"size":14246,"mtime":1652301919319,"results":"126","hashOfConfig":"79"},{"size":2317,"mtime":1616886877814,"results":"127","hashOfConfig":"79"},{"size":22478,"mtime":1645386798806,"results":"128","hashOfConfig":"79"},{"size":462,"mtime":1616886877814,"results":"129","hashOfConfig":"79"},{"size":303,"mtime":1619181117792,"results":"130","hashOfConfig":"79"},{"size":303,"mtime":1619181117815,"results":"131","hashOfConfig":"79"},{"size":3591,"mtime":1651437007223,"results":"132","hashOfConfig":"79"},{"size":244,"mtime":1616886877808,"results":"133","hashOfConfig":"79"},{"size":750,"mtime":1616886877815,"results":"134","hashOfConfig":"79"},{"size":1073,"mtime":1652301917407,"results":"135","hashOfConfig":"79"},{"size":1226,"mtime":1652301917769,"results":"136","hashOfConfig":"79"},{"size":992,"mtime":1652301917390,"results":"137","hashOfConfig":"79"},{"size":155,"mtime":1619181117504,"results":"138","hashOfConfig":"79"},{"size":1199,"mtime":1652301917375,"results":"139","hashOfConfig":"79"},{"size":437,"mtime":1619181117807,"results":"140","hashOfConfig":"79"},{"size":300,"mtime":1619181117519,"results":"141","hashOfConfig":"79"},{"size":22182,"mtime":1652387748321,"results":"142","hashOfConfig":"79"},{"size":165,"mtime":1619181117644,"results":"143","hashOfConfig":"79"},{"size":1060,"mtime":1652301917423,"results":"144","hashOfConfig":"79"},{"size":90,"mtime":1619181118025,"results":"145","hashOfConfig":"79"},{"size":3974,"mtime":1643396456397,"results":"146","hashOfConfig":"79"},{"size":1077,"mtime":1652301917458,"results":"147","hashOfConfig":"79"},{"size":1044,"mtime":1652301917471,"results":"148","hashOfConfig":"79"},{"size":813,"mtime":1625939363616,"results":"149","hashOfConfig":"79"},{"size":529,"mtime":1625939362361,"results":"150","hashOfConfig":"79"},{"size":1144,"mtime":1652301917489,"results":"151","hashOfConfig":"79"},{"size":1056,"mtime":1652301917506,"results":"152","hashOfConfig":"79"},{"size":1579,"mtime":1651437005087,"results":"153","hashOfConfig":"79"},{"size":3431,"mtime":1652291995403,"results":"154","hashOfConfig":"79"},{"size":20077,"mtime":1652216895410,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1v39b96",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"158"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"158"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"158"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"158"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"158"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"158"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"158"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"158"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"158"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"158"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"158"},"/home/rodrigo/UI_Projects/gt-retail/webapp/src/index.js",[],["324","325"],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/App.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/ScrollToTop.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/LoginService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppTopbar.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppMenu.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppFooter.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/AppProfile.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/Login.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/UsersList.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/PageNotFound.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCart.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/dashboard/GTDashboard.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/delivery-note/ManualDeliveryNote.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/delivery-note/SearchDeliveryNotes.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/pricing/BatchPricing.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/stock/ProductHistory.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/SearchSales.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/ViewSale.js",["326"],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/report/SalesByProductReport.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/payment/SearchPendingSales.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/fiscal/FiscalBooks.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/products/ProductsInventory.js",["327","328","329"],"import _ from \"lodash\"\nimport React, { Component, useEffect, useState } from \"react\"\nimport { ProductsService } from \"../../service/ProductsService\"\nimport { SearchProductsFilter } from \"../core/SearchProductsFilter\"\nimport { DataTable } from \"primereact/datatable\"\nimport { Column } from \"primereact/column\"\nimport { formatDate } from \"../../utils/DateUtils\"\nimport { Button } from \"primereact/button\"\n\nconst productColumns = [\n  { field: \"codigoPropio\", header: \"Código\" },\n  { field: \"codigoFabricante\", header: \"Cód. Fab.\" },\n  { field: \"descripcion\", header: \"Descripción\", style: { width: \"30%\" } },\n  { field: \"brand.brandName\", header: \"Marca\" },\n  { field: \"costoAdquisicion\", header: \"Costo Bruto\" },\n  { field: \"costoFinal\", header: \"Costo Neto\" },\n  { field: \"precioVenta\", header: \"Precio\", style: { fontWeight: \"bold\" } },\n  { field: \"saleUnit\", header: \"Unidad\" },\n  { field: \"stockActual\", header: \"Stock Total\" },\n  {\n    field: \"fechaUltimaModificacion\",\n    header: \"Fecha Ult. Modif.\",\n    format: function (rowData) {\n      return formatDate(rowData)\n    },\n  },\n]\n\nexport const ProductsInventory = () => {\n  const productsService = new ProductsService()\n\n  const [loading, setLoading] = useState(false)\n  const [rows, setRows] = useState(20)\n  const [first, setFirst] = useState(0)\n  const [totalRecords, setTotalRecords] = useState(0)\n  const [selectedIds, setSelectedIds] = useState(new Map())\n  const [products, setProducts] = useState([])\n  const [searchFilter, setSearchFilter] = useState(null)\n\n  const renderFilterSection = () => {\n    return (\n      <SearchProductsFilter\n        searchProductsCallback={searchProducts}\n        loading={loading}\n      />\n    )\n  }\n\n  const renderSearchResults = () => {\n    return (\n      <DataTable\n        value={products}\n        dataKey={\"productId\"}\n        paginator={true}\n        rows={rows}\n        totalRecords={totalRecords}\n        lazy={true}\n        first={first}\n        rowClassName={getRowClass}\n        onPage={onPageEvent}\n        loading={loading}\n        loadingIcon=\"fa fa-fw fa-spin fa-spinner\"\n        resizableColumns\n      >\n        {renderColumns()}\n      </DataTable>\n    )\n  }\n\n  const getRowClass = (product) => {\n    return { \"p-highlight\": selectedIds.get(product.productId) }\n  }\n\n  const renderColumns = () => {\n    let columns = productColumns.map((col, i) => {\n      return (\n        <Column\n          key={col.field}\n          field={col.field}\n          header={col.header}\n          style={col.style}\n          body={(rowData) => getColumnBody(col, rowData)}\n        />\n      )\n    })\n\n    columns.push(<Column body={getLinkActions} />)\n\n    return columns\n  }\n\n  const searchProducts = (searchFilter) => {\n    if (!loading) {\n      let searchOptions = {\n        firstResult: 0,\n        maxResults: rows,\n        searchFilter: searchFilter,\n      }\n\n      productsService.searchProducts(searchOptions, handleSuccess, handleError)\n\n      setLoading(true)\n      setFirst(0)\n      setSearchFilter(searchFilter)\n    }\n  }\n\n  const onPageEvent = (event) => {\n    let searchOptions = {\n      firstResult: event.first,\n      maxResults: rows,\n      searchFilter: searchFilter,\n    }\n\n    productsService.searchProducts(searchOptions, handleSuccess, handleError)\n\n    setLoading(true)\n    setFirst(event.first)\n  }\n\n  const handleSuccess = (data) => {\n    const foundProducts = data.data\n    const totalRows = data.totalResults\n\n    setProducts(foundProducts)\n    setTotalRecords(totalRows)\n    setLoading(false)\n  }\n\n  const handleError = (errorData) => {\n    setProducts([])\n    setTotalRecords(0)\n    setLoading(false)\n  }\n\n  const getColumnBody = (col, rowData) => {\n    const field = _.get(rowData, col.field)\n\n    if (col.format) {\n      return col.format(field)\n    }\n\n    return field\n  }\n\n  const getLinkActions = (rowData) => {\n    const { productId } = rowData\n\n    return (\n      <Button\n        type=\"button\"\n        icon=\"fa fa-fw fa-edit\"\n        onClick={() => handleEditProduct(productId)}\n      />\n    )\n  }\n\n  const handleEditProduct = (productId) => {\n    let newSelectedIds = new Map(selectedIds)\n\n    newSelectedIds.set(productId, true)\n\n    setSelectedIds(newSelectedIds)\n\n    window.open(`#/product/${productId}`, \"_blank\")\n  }\n\n  return (\n    <div className=\"card card-w-title\">\n      <h1>Mayor de productos</h1>\n      {renderFilterSection()}\n      <Button\n        type=\"button\"\n        label={\"Nuevo\"}\n        icon=\"fa fa-fw fa-plus\"\n        onClick={() => window.open(`#/product/`, \"_blank\")}\n      />\n      {renderSearchResults()}\n    </div>\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/ProductsService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/FiscalBookService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/payment/PayDialog.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/PaymentPendingSalesService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/ShopCartService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/LoadingButton.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchProductsFilter.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/DateUtils.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/FileOutputsService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/DefaultProps.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/ReportsService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/InvoiceDialog.js",["330"],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/SalesService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/payment/CashSaleToPay.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/AutocompleteProductFilter.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/StockService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/DeliveryNotesService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/pricing/AddPercentDialog.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchProductsTable.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchProductsDialog.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/DashboardService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartConfirmation.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartPayment.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartCustomer.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/ShopCartItems.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/stores/ShopCartStore.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/shop-cart/AddNewCustomerDialog.js",[],["331","332"],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/stores/SessionStore.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/SucursalesService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/UsersService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/CustomersService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/custom-error-form.messages.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/StringUtils.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/CategoriesSelector.js",["333"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { CategoriesService } from \"../../service/CategoriesService\"\n\nexport const CategoriesSelector = ({ onCategorySelect, selectedCategory }) => {\n  const [currentCategory, setCurrentCategory] = useState(selectedCategory)\n  const [categories, setCategories] = useState([])\n  const service = new CategoriesService()\n\n  useEffect(() => service.getCategories(handleCategories), [])\n  useEffect(() => setCurrentCategory(selectedCategory), [selectedCategory])\n\n  const handleCategories = (values) => {\n    setCategories(values)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentCategory(value)\n\n    if (onCategorySelect) {\n      onCategorySelect(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"category\"\n      placeholder={\"Rubro\"}\n      filter={true}\n      dataKey=\"categoryId\"\n      options={categories}\n      showClear={true}\n      value={currentCategory}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SubCategoriesSelector.js",["334"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { CategoriesService } from \"../../service/CategoriesService\"\n\nexport const SubCategoriesSelector = ({\n  onSubCategorySelect,\n  categoryId,\n  selectedSubCategory,\n}) => {\n  const [currentSubCategory, setCurrentSubCategory] = useState(selectedSubCategory)\n  const [subCategories, setSubCategories] = useState([])\n  const service = new CategoriesService()\n\n  useEffect(() => {\n    service.getSubCategories(categoryId, handleSubCategories)\n    setCurrentSubCategory(null)\n  }, [categoryId])\n  useEffect(() => setCurrentSubCategory(selectedSubCategory), [selectedSubCategory])\n\n  const handleSubCategories = (values) => {\n    setSubCategories(values)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentSubCategory(value)\n\n    if (onSubCategorySelect) {\n      onSubCategorySelect(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"subCategory\"\n      placeholder={\"Sub-Rubro\"}\n      filter={true}\n      dataKey=\"subCategoryId\"\n      options={subCategories}\n      showClear={true}\n      value={currentSubCategory}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/BrandsSelector.js",["335"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { BrandsService } from \"../../service/BrandsService\"\n\nexport const BrandsSelector = ({ selectedBrand, onBrandSelect }) => {\n  const [currentBrand, setCurrentBrand] = useState(selectedBrand)\n  const [brands, setBrands] = useState([])\n  const service = new BrandsService()\n\n  useEffect(() => service.getBrands(handleGetBrands), [])\n  useEffect(() => setCurrentBrand(selectedBrand), [selectedBrand])\n\n  const handleGetBrands = (brands) => {\n    setBrands(brands)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentBrand(value)\n    if (onBrandSelect) {\n      onBrandSelect(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"brand\"\n      placeholder={\"Marca\"}\n      filter={true}\n      dataKey=\"brandId\"\n      options={brands}\n      showClear={true}\n      value={currentBrand}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/BrandsService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/AutocompleteSupplierFilter.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/SuppliersService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/CategoriesService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/products/ProductDetails.js",["336","337"],"import _ from \"lodash\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { ProductsService } from \"../../service/ProductsService\"\nimport { DataTable } from \"primereact/datatable\"\nimport { Column } from \"primereact/column\"\nimport { Button } from \"primereact/button\"\nimport { Toast } from \"primereact/toast\"\nimport { InputText } from \"primereact/inputtext\"\nimport { Checkbox } from \"primereact/checkbox\"\nimport { InputTextarea } from \"primereact/inputtextarea\"\nimport {\n  fieldRequiredDefaultMessage,\n  invalidPatternMessage,\n} from \"../../custom-error-form.messages\"\nimport { FieldError, Form } from \"react-jsonschema-form-validation\"\nimport Field from \"react-jsonschema-form-validation/dist/Field\"\nimport { FiscalTaxRateSelector } from \"../core/FiscalTaxRateSelector\"\nimport { v4 as uuid } from \"uuid\"\nimport { PercentTypesSelector } from \"../core/PercentTypesSelector\"\nimport { isNotEmpty } from \"../../utils/StringUtils\"\nimport { PriceListSelector } from \"../core/PriceListSelector\"\nimport { LoadingButton } from \"../core/LoadingButton\"\nimport { ProductSupplyTypeSelector } from \"../core/ProductSupplyTypeSelector\"\nimport { CategoriesSelector } from \"../core/CategoriesSelector\"\nimport { SubCategoriesSelector } from \"../core/SubCategoriesSelector\"\nimport { BrandsSelector } from \"../core/BrandsSelector\"\nimport { ProductUnitTypeSelector } from \"../core/ProductUnitTypeSelector\"\nimport { AutocompleteSupplierFilter } from \"../core/AutocompleteSupplierFilter\"\n\nconst productSchema = {\n  type: \"object\",\n  properties: {\n    code: {\n      type: \"string\",\n      minLength: 1,\n      maxLength: 11,\n      pattern: \"^[A-Z0-9-._/]*$\",\n    },\n    description: { type: \"string\", maxLength: 200 },\n    factoryCode: { type: \"string\", maxLength: 60 },\n    observations: { type: \"string\", maxLength: 2048 },\n    location: { type: \"string\", maxLength: 60 },\n    grossCost: { pattern: \"^(-)?(?!0\\\\d)\\\\d*(\\\\.\\\\d{1,4})?$\" },\n    purchaseUnitsToSaleUnitEquivalence: { pattern: \"^(?!0\\\\d)\\\\d*(\\\\.\\\\d{1,2})?$\" },\n    fiscalTaxRate: { type: \"object\" },\n    salePrices: { type: \"array\" },\n    percentages: { type: \"array\" },\n    supplyType: { type: \"object\" },\n    category: { type: \"object\" },\n    subCategory: { type: \"object\" },\n    brand: { type: \"object\" },\n    purchaseUnit: { type: \"object\" },\n    saleUnit: { type: \"object\" },\n    regularSupplier: { type: \"object\" },\n    minimumStock: { pattern: \"^(?!0\\\\d)\\\\d*(\\\\.\\\\d{1,2})?$\" },\n  },\n  required: [\n    \"description\",\n    \"code\",\n    \"grossCost\",\n    \"fiscalTaxRate\",\n    \"salePrices\",\n    \"supplyType\",\n    \"category\",\n    \"subCategory\",\n    \"brand\",\n    \"purchaseUnitsToSaleUnitEquivalence\",\n    \"purchaseUnit\",\n    \"saleUnit\",\n    \"minimumStock\",\n  ],\n}\n\nconst NEW_PRODUCT = {\n  productId: null,\n  code: \"\",\n  description: \"\",\n  factoryCode: \"\",\n  observations: \"\",\n  location: \"\",\n  grossCost: 0,\n  purchaseUnitsToSaleUnitEquivalence: 1,\n  fiscalTaxRate: null,\n  salePrices: [],\n  percentages: [],\n  supplyType: null,\n  category: null,\n  subCategory: null,\n  brand: null,\n  purchaseUnit: null,\n  saleUnit: null,\n  regularSupplier: null,\n  minimumStock: 0,\n  activo: true,\n}\n\nexport const ProductDetails = (mainProps) => {\n  const productsService = new ProductsService()\n\n  const [loading, setLoading] = useState(false)\n  const [productId, setProductId] = useState(mainProps.match.params.productId)\n  const [editingProduct, setEditingProduct] = useState(null)\n\n  const [formData, setFormData] = useState(NEW_PRODUCT)\n\n  const toast = useRef(null)\n\n  useEffect(() => {\n    if (productId) {\n      productsService.getProduct(\n        productId,\n        handleGetProductInfo,\n        handleGetProductError\n      )\n    }\n  }, [productId])\n\n  const getTitle = () => {\n    if (productId) {\n      return `Edición de producto: ${productId}`\n    }\n    return \"Nuevo producto\"\n  }\n\n  const handleSubmit = () => {\n    setLoading(true)\n\n    if (productId) {\n      productsService.updateProduct(formData, handleSuccess, handleError)\n    } else {\n      productsService.createProduct(formData, handleCreationSuccess, handleError)\n    }\n  }\n\n  const handleSuccess = () => {\n    toast.current.show({\n      severity: \"info\",\n      summary: `El producto ${productId} fue editado exitosamente`,\n    })\n\n    productsService.getProduct(\n      productId,\n      (productInfo) => handleGetProductInfo(productInfo),\n      handleGetProductError\n    )\n  }\n\n  const handleCreationSuccess = (productInfo) => {\n    const { productId } = productInfo\n\n    toast.current.show({\n      severity: \"info\",\n      summary: `El producto ${productId} fue creado exitosamente`,\n    })\n\n    setProductId(productId)\n  }\n\n  const handleError = (error) => {\n    setLoading(false)\n    toast.current.show({\n      severity: \"error\",\n      summary: \"Ocurrió un error al actualizar el producto\",\n      detail: error.message,\n    })\n  }\n  const handleGetProductError = (error) => {\n    toast.current.show({\n      severity: \"error\",\n      summary: `No se ha podido encontrar el producto [${error.errorCode}]`,\n      detail: _.get(error, \"message\", \"\"),\n    })\n  }\n  const renderIdentificationSection = () => {\n    const { description, code, factoryCode, observations, active } = formData\n    return (\n      <div className=\"p-card-body p-fluid p-grid\">\n        <label className=\"p-col-3 \">{\"Id:\"}</label>\n        <div className=\"p-col-9\">{productId}</div>\n        <div className=\"p-col-3\">{\"Código:\"}</div>\n        <div className=\"p-col-9\">\n          <Field\n            id=\"code\"\n            component={InputText}\n            name=\"code\"\n            value={code}\n            onBlur={validateProductCode}\n          />\n          <FieldError name=\"code\" />\n        </div>\n        <div className=\"p-col-3\">{\"Descripción:\"}</div>\n        <div className=\"p-col-9\">\n          <Field\n            id=\"description\"\n            component={InputText}\n            name=\"description\"\n            value={description}\n          />\n          <FieldError name=\"description\" />\n        </div>\n        <div className=\"p-col-3\">{\"Código de fábrica:\"}</div>\n        <div className=\"p-col-9\">\n          <Field\n            id=\"factoryCode\"\n            component={InputText}\n            name=\"factoryCode\"\n            value={factoryCode}\n          />\n          <FieldError name=\"factoryCode\" />\n        </div>\n        <div className=\"p-col-3\">{\"Observaciones:\"}</div>\n        <div className=\"p-col-9\">\n          <Field\n            id=\"observations\"\n            component={InputTextarea}\n            name=\"observations\"\n            value={observations || \"\"}\n          />\n          <FieldError name=\"observations\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Activo:\"}</div>\n        <div className=\"p-col-9\">\n          <Field id=\"active\" component={Checkbox} name=\"active\" checked={active} />\n        </div>\n      </div>\n    )\n  }\n\n  const renderPricingSection = () => {\n    const { grossCost, fiscalTaxRate, netCost } = formData\n    return (\n      <div className=\"p-card-body p-fluid p-grid\">\n        <div className=\"p-col-3\">{\"Costo Bruto:\"}</div>\n        <div className=\"p-col-3\">\n          <Field\n            id=\"grossCost\"\n            component={InputText}\n            name=\"grossCost\"\n            value={grossCost}\n          />\n          <FieldError name=\"grossCost\" />\n        </div>\n        <div className=\"p-col-3\">{\"Tasa de IVA:\"}</div>\n        <div className=\"p-col-3\">\n          <FiscalTaxRateSelector\n            selectedTaxRate={fiscalTaxRate}\n            onTaxRateSelect={(taxRate) =>\n              handleProductPropertyChange(\"fiscalTaxRate\", taxRate)\n            }\n          />\n          <FieldError name=\"fiscalTaxRate\" />\n        </div>\n        <div className=\"p-col-12\">{renderPercentsTable()}</div>\n        <div className=\"p-col-6\">\n          <label className=\"p-col-3\">{\"Costo Neto:\"}</label>\n          <label className=\"p-col-3\">{netCost}</label>\n        </div>\n        <div className=\"p-col-12\">{renderPricesTable()}</div>\n      </div>\n    )\n  }\n\n  const renderPercentsTable = () => {\n    const { percentages } = formData\n\n    return (\n      <DataTable\n        header={renderPercentTableHeader()}\n        value={percentages}\n        resizableColumns={true}\n        responsive={true}\n        editMode={\"cell\"}\n      >\n        <Column\n          field=\"percentType.displayName\"\n          header=\"Tipo\"\n          editor={(props) => getPercentTypeEditor(props)}\n        />\n        <Column\n          field=\"rate\"\n          header=\"Valor\"\n          editor={(props) => getPercentValueEditor(props)}\n          editorValidator={numberValidator}\n        />\n        <Column\n          key=\"actions\"\n          body={(rowData) => getPercentsTableActions(rowData)}\n          style={{ textAlign: \"center\", width: \"7em\" }}\n        />\n      </DataTable>\n    )\n  }\n\n  const renderPricesTable = () => {\n    const { salePrices } = formData\n\n    return (\n      <DataTable\n        header={renderPriceTableHeader()}\n        value={salePrices}\n        resizableColumns={true}\n        responsive={true}\n        editMode={\"cell\"}\n      >\n        <Column\n          field=\"priceList.displayName\"\n          header=\"Lista\"\n          editor={(props) => getPriceListEditor(props)}\n        />\n        <Column\n          field=\"utility\"\n          header=\"Utilidad\"\n          editor={(props) => getUtilityValueEditor(props)}\n          editorValidator={numberValidator}\n        />\n        <Column field=\"netPrice\" header=\"Precio Neto\" />\n        <Column\n          field=\"finalPrice\"\n          header=\"Precio Final\"\n          editor={(props) => getFinalPriceEditor(props)}\n          editorValidator={numberValidator}\n        />\n        <Column\n          key=\"actions\"\n          body={(rowData) => getPriceTableActions(rowData)}\n          style={{ textAlign: \"center\", width: \"7em\" }}\n        />\n      </DataTable>\n    )\n  }\n\n  const renderClassificationSection = () => {\n    const {\n      supplyType,\n      category,\n      subCategory,\n      brand,\n      saleUnit,\n      purchaseUnit,\n      purchaseUnitsToSaleUnitEquivalence,\n      regularSupplier,\n    } = formData\n\n    return (\n      <div className=\"p-card-body p-fluid p-grid\">\n        <div className=\"p-col-3\">{\"Tipo de producto:\"}</div>\n        <div className=\"p-col-9\">\n          <ProductSupplyTypeSelector\n            selectedSupplyType={supplyType}\n            onSupplyTypeSelect={(supplyType) =>\n              handleProductPropertyChange(\"supplyType\", supplyType)\n            }\n          />\n          <FieldError name=\"supplyType\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Proveedor habitual:\"}</div>\n        <div className=\"p-col-9\">\n          <AutocompleteSupplierFilter\n            selectedSupplier={regularSupplier}\n            onSupplierSelect={(supplier) =>\n              handleProductPropertyChange(\"regularSupplier\", supplier)\n            }\n          />\n          <FieldError name=\"regularSupplier\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Rubro:\"}</div>\n        <div className=\"p-col-9\">\n          <CategoriesSelector\n            selectedCategory={category}\n            onCategorySelect={(category) =>\n              handleProductPropertyChange(\"category\", category)\n            }\n          />\n          <FieldError name=\"category\" />\n        </div>\n        <div className=\"p-col-3\">{\"Sub-Rubro:\"}</div>\n        <div className=\"p-col-9\">\n          {category && (\n            <SubCategoriesSelector\n              categoryId={category.categoryId}\n              selectedSubCategory={subCategory}\n              onSubCategorySelect={(subCategory) =>\n                handleProductPropertyChange(\"subCategory\", subCategory)\n              }\n            />\n          )}\n          <FieldError name=\"subCategory\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Marca:\"}</div>\n        <div className=\"p-col-9\">\n          <BrandsSelector\n            selectedBrand={brand}\n            onBrandSelect={(brand) => handleProductPropertyChange(\"brand\", brand)}\n          />\n          <FieldError name=\"brand\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Unidad de compra:\"}</div>\n        <div className=\"p-col-9\">\n          <ProductUnitTypeSelector\n            selectedUnitType={purchaseUnit}\n            onSelectUnitType={(purchaseUnit) =>\n              handleProductPropertyChange(\"purchaseUnit\", purchaseUnit)\n            }\n          />\n          <FieldError name=\"purchaseUnit\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Unidad de venta:\"}</div>\n        <div className=\"p-col-9\">\n          <ProductUnitTypeSelector\n            selectedUnitType={saleUnit}\n            onSelectUnitType={(saleUnit) =>\n              handleProductPropertyChange(\"saleUnit\", saleUnit)\n            }\n          />\n          <FieldError name=\"saleUnit\" />\n        </div>\n\n        <div className=\"p-col-3\">{\"Equivalencia un. compra por un. venta:\"}</div>\n        <div className=\"p-col-3\">\n          <Field\n            id=\"purchaseUnitsToSaleUnitEquivalence\"\n            component={InputText}\n            name=\"purchaseUnitsToSaleUnitEquivalence\"\n            value={purchaseUnitsToSaleUnitEquivalence}\n          />\n          <FieldError name=\"purchaseUnitsToSaleUnitEquivalence\" />\n        </div>\n      </div>\n    )\n  }\n\n  const renderStockSection = () => {\n    const { minimumStock } = formData\n\n    return (\n      <div className=\"p-card-body p-fluid p-grid\">\n        <div className=\"p-col-3\">{\"Stock mínimo:\"}</div>\n        <div className=\"p-col-3\">\n          <Field\n            id=\"minimumStock\"\n            component={InputText}\n            name=\"minimumStock\"\n            value={minimumStock}\n          />\n          <FieldError name=\"minimumStock\" />\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentTypeEditor = (props) => {\n    const { rowData } = props\n\n    return (\n      <PercentTypesSelector\n        selectedItem={rowData[\"percentType\"]}\n        onChange={(percentType) =>\n          handlePercentChange(rowData, \"percentType\", percentType)\n        }\n      />\n    )\n  }\n\n  const getUtilityValueEditor = (props) => {\n    const { rowData } = props\n\n    return (\n      <InputText\n        value={rowData[\"utility\"]}\n        onChange={(e) => handleSalePriceChange(rowData, \"utility\", e.target.value)}\n      />\n    )\n  }\n\n  const getFinalPriceEditor = (props) => {\n    const { rowData } = props\n    const finalPrice = \"finalPrice\"\n\n    return (\n      <InputText\n        value={rowData[finalPrice]}\n        onChange={(e) => handleSalePriceChange(rowData, finalPrice, e.target.value)}\n      />\n    )\n  }\n\n  const getPercentValueEditor = (props) => {\n    const { rowData } = props\n\n    return (\n      <InputText\n        value={rowData[\"rate\"]}\n        onChange={(e) => handlePercentChange(rowData, \"rate\", e.target.value)}\n      />\n    )\n  }\n\n  const handlePercentChange = (percent, field, value) => {\n    let percentages = Object.assign([], formData.percentages)\n    const index = percentages.findIndex((item) => item.uid === percent.uid)\n\n    percentages[index][field] = value\n\n    handleProductPropertyChange(\"percentages\", percentages)\n  }\n\n  const numberValidator = (e) => {\n    const { rowData, field } = e.columnProps\n    const value = String(rowData[field])\n\n    return isNotEmpty(value) && value.match(\"^(-)?(?!0\\\\d)\\\\d*(\\\\.\\\\d{1,4})?$\")\n  }\n\n  const getPercentsTableActions = (rowData) => {\n    return (\n      <div className=\"p-grid p-fluid\">\n        <div className=\"p-col-6\">\n          <Button\n            type=\"button\"\n            icon=\"fa fa-fw fa-trash\"\n            className=\"p-button-danger\"\n            onClick={() => removePercent(rowData)}\n            tooltip={\"Quitar ítem\"}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  const removePercent = (productPercent) => {\n    let percentages = Object.assign([], formData.percentages)\n\n    _.remove(percentages, (item) => {\n      return item.uid === productPercent.uid\n    })\n\n    handleProductPropertyChange(\"percentages\", percentages)\n  }\n\n  const addPercent = () => {\n    let percentages = Object.assign([], formData.percentages)\n    const newPercent = {\n      uid: uuid(),\n      rate: \"\",\n      percentType: { displayName: \"\" },\n    }\n\n    percentages.push(newPercent)\n\n    handleProductPropertyChange(\"percentages\", percentages)\n  }\n\n  const getPriceListEditor = (props) => {\n    const { rowData } = props\n    const fieldName = \"priceList\"\n\n    return (\n      <PriceListSelector\n        selectedItem={rowData[fieldName]}\n        onChange={(percentType) =>\n          handleSalePriceChange(rowData, fieldName, percentType)\n        }\n      />\n    )\n  }\n\n  const handleSalePriceChange = (salePrice, field, value) => {\n    let salePrices = Object.assign([], formData.salePrices)\n    const index = salePrices.findIndex((item) => item.uid === salePrice.uid)\n\n    salePrices[index][field] = value\n\n    if (field === \"finalPrice\") {\n      const taxRate = parseFloat(formData.fiscalTaxRate.rate) / 100 + 1\n      const netCost = parseFloat(formData.netCost)\n      const salePrice = parseFloat(value)\n      const utility = ((salePrice / taxRate - netCost) / netCost) * 100\n\n      salePrices[index].utility = utility.toFixed(4)\n    }\n\n    handleProductPropertyChange(\"salePrices\", salePrices)\n  }\n\n  const removePrice = (salePrice) => {\n    let prices = Object.assign([], formData.salePrices)\n\n    _.remove(prices, (item) => {\n      return item.uid === salePrice.uid\n    })\n\n    handleProductPropertyChange(\"salePrices\", prices)\n  }\n\n  const addSalePrice = () => {\n    let salePrices = Object.assign([], formData.salePrices)\n    const newSalePrice = {\n      uid: uuid(),\n      utility: \"\",\n      finalPrice: \"\",\n      netPrice: \"\",\n      priceList: { displayName: \"\" },\n    }\n\n    salePrices.push(newSalePrice)\n\n    handleProductPropertyChange(\"salePrices\", salePrices)\n  }\n\n  const getPriceTableActions = (rowData) => {\n    return (\n      <div className=\"p-grid p-fluid\">\n        <div className=\"p-col-6\">\n          <Button\n            type=\"button\"\n            icon=\"fa fa-fw fa-trash\"\n            className=\"p-button-danger\"\n            onClick={() => removePrice(rowData)}\n            tooltip={\"Quitar ítem\"}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  const handleProductPropertyChange = (property, value) => {\n    let product = { ...formData }\n\n    product[property] = value\n\n    if (property === \"category\") {\n      product.subCategory = null\n    }\n\n    handleChange(product)\n  }\n\n  const handleGetProductInfo = (productInfo) => {\n    setEditingProduct(productInfo)\n\n    let { percentages, salePrices } = productInfo\n\n    percentages.forEach((percent) => {\n      percent.uid = uuid()\n    })\n    salePrices.forEach((salePrice) => {\n      salePrice.uid = uuid()\n    })\n\n    setLoading(false)\n    setFormData({ ...formData, ...productInfo })\n  }\n\n  const renderPercentTableHeader = () => {\n    return (\n      <div className=\"p-fluid p-grid\">\n        <div className=\"p-col-8\">\n          <div>{\"Porcentajes\"}</div>\n        </div>\n        <div className=\"p-col-4\">\n          <Button\n            label=\"Agregar porcentaje\"\n            icon=\"fa fa-fw fa-plus\"\n            className=\"p-button-success\"\n            type=\"button\"\n            onClick={addPercent}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  const renderPriceTableHeader = () => {\n    return (\n      <div className=\"p-fluid p-grid\">\n        <div className=\"p-col-8\">\n          <div>{\"Precios\"}</div>\n        </div>\n        <div className=\"p-col-4\">\n          <Button\n            label=\"Agregar precio\"\n            icon=\"fa fa-fw fa-plus\"\n            className=\"p-button-success\"\n            type=\"button\"\n            onClick={addSalePrice}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  const updatePrices = (product) => {\n    const taxRate = parseFloat(_.get(product, \"fiscalTaxRate.rate\", \"0\")) / 100 + 1\n    const percentages = product.percentages\n    const salePrices = product.salePrices\n    let netCost = parseFloat(product.grossCost)\n\n    percentages.forEach((p) => {\n      if (p.percentType.percent) {\n        netCost += netCost * (p.rate / 100)\n      } else {\n        netCost += p.value\n      }\n    })\n\n    product.netCost = netCost.toFixed(4)\n\n    salePrices.forEach((salePrice) => {\n      const utility = parseFloat(salePrice.utility) / 100\n      const netPrice = netCost + netCost * utility\n\n      salePrice.netPrice = netPrice.toFixed(4)\n      salePrice.finalPrice = (netPrice * taxRate).toFixed(4)\n    })\n  }\n\n  const validateProductCode = () => {\n    if (formData.code) {\n      productsService.validateProductCode(formData, (error) =>\n        handleDuplicatedCodeError(error)\n      )\n    }\n  }\n\n  const handleDuplicatedCodeError = (error) => {\n    toast.current.show({\n      severity: \"error\",\n      summary: `Código duplicado [${error.errorCode}]`,\n      detail: error.message,\n    })\n  }\n\n  const handleChange = (newData) => {\n    updatePrices(newData)\n    setFormData(newData)\n  }\n\n  return (\n    <div className=\"card card-w-title\">\n      <Toast ref={toast} />\n      <h1>{getTitle()}</h1>\n\n      <Form\n        data={formData}\n        onChange={handleChange}\n        schema={productSchema}\n        onSubmit={handleSubmit}\n        errorMessages={{\n          required: () => fieldRequiredDefaultMessage,\n          pattern: () => invalidPatternMessage,\n        }}\n      >\n        <div className=\"card \">\n          <h1 style={{ fontSize: \"16px\" }}>Identificación</h1>\n          {renderIdentificationSection()}\n        </div>\n\n        <div className=\"card \">\n          <h1 style={{ fontSize: \"16px\" }}>Precios</h1>\n          {renderPricingSection()}\n        </div>\n\n        <div className=\"card \">\n          <h1 style={{ fontSize: \"16px\" }}>Clasificación</h1>\n          {renderClassificationSection()}\n        </div>\n\n        <div className=\"card \">\n          <h1 style={{ fontSize: \"16px\" }}>Stock</h1>\n          {renderStockSection()}\n        </div>\n\n        <LoadingButton\n          type=\"submit\"\n          label=\"Guardar\"\n          loading={loading}\n          icon=\"fa fa-fw fa-save\"\n        />\n        <Button\n          type=\"button\"\n          label=\"Cerrar\"\n          className=\"p-button-secondary\"\n          icon=\"fa fa-fw fa-arrow-left\"\n          onClick={() => {\n            window.close()\n          }}\n        />\n      </Form>\n    </div>\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/service/FiscalTaxRateService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/FiscalTaxRateSelector.js",["338"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { FiscalTaxRateService } from \"../../service/FiscalTaxRateService\"\n\nexport const FiscalTaxRateSelector = ({ onTaxRateSelect, selectedTaxRate }) => {\n  const [currentTaxRate, setCurrentTaxRate] = useState(selectedTaxRate)\n  const [taxRates, setTaxRates] = useState([])\n  const service = new FiscalTaxRateService()\n\n  useEffect(() => service.getTaxRates(handleTaxRates), [])\n  useEffect(() => setCurrentTaxRate(selectedTaxRate), [selectedTaxRate])\n\n  const handleTaxRates = (brands) => {\n    setTaxRates(brands)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentTaxRate(value)\n\n    if (onTaxRateSelect) {\n      onTaxRateSelect(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"taxRate\"\n      placeholder={\"Tasa IVA\"}\n      filter={true}\n      dataKey=\"taxRateId\"\n      options={taxRates}\n      showClear={true}\n      value={currentTaxRate}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/Logger.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/HTTPService.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/PercentTypesSelector.js",["339"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { ProductsService } from \"../../service/ProductsService\"\n\nexport const PercentTypesSelector = ({ onChange, selectedItem }) => {\n  const [currentPercentType, setCurrentPercentType] = useState(selectedItem)\n  const [percentTypes, setPercentTypes] = useState([])\n  const service = new ProductsService()\n\n  useEffect(() => service.getPercentTypes(handlePercentTypes), [])\n  useEffect(() => setCurrentPercentType(selectedItem), [selectedItem])\n\n  const handlePercentTypes = (values) => {\n    setPercentTypes(values)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentPercentType(value)\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"percentType\"\n      placeholder={\"Tipo de porcentaje\"}\n      filter={true}\n      dataKey=\"percentTypeId\"\n      options={percentTypes}\n      showClear={true}\n      value={currentPercentType}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/PriceListSelector.js",["340"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { ProductsService } from \"../../service/ProductsService\"\n\nexport const PriceListSelector = ({ onChange, selectedItem }) => {\n  const [currentPriceList, setCurrentPriceList] = useState(selectedItem)\n  const [priceLists, setPriceLists] = useState([])\n  const service = new ProductsService()\n\n  useEffect(() => service.getPriceLists(handlePriceLists), [])\n  useEffect(() => setCurrentPriceList(selectedItem), [selectedItem])\n\n  const handlePriceLists = (values) => {\n    setPriceLists(values)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentPriceList(value)\n\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"priceList\"\n      placeholder={\"Lista de precios\"}\n      filter={true}\n      dataKey=\"priceListId\"\n      options={priceLists}\n      showClear={true}\n      value={currentPriceList}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/utils/ExcelExporter.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/sale/ExportSalesUtils.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/ProductSupplyTypeSelector.js",["341"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { ProductsService } from \"../../service/ProductsService\"\n\nexport const ProductSupplyTypeSelector = ({\n  onSupplyTypeSelect,\n  selectedSupplyType,\n}) => {\n  const [currentSupplyType, setCurrentSupplyType] = useState(selectedSupplyType)\n  const [supplyTypes, setSupplyTypes] = useState([])\n  const service = new ProductsService()\n\n  useEffect(() => service.getSupplyTypes(handleGetSupplyTypes), [])\n  useEffect(() => setCurrentSupplyType(selectedSupplyType), [selectedSupplyType])\n\n  const handleGetSupplyTypes = (supplyTypes) => {\n    setSupplyTypes(supplyTypes)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentSupplyType(value)\n\n    if (onSupplyTypeSelect) {\n      onSupplyTypeSelect(value)\n    }\n  }\n\n  return (\n    <Dropdown\n      id=\"supplyType\"\n      placeholder={\"Tipo de proveeduria\"}\n      filter={true}\n      dataKey=\"supplyTypeId\"\n      options={supplyTypes}\n      showClear={true}\n      value={currentSupplyType}\n      optionLabel=\"displayName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/ProductUnitTypeSelector.js",["342"],"import React, { useEffect, useState } from \"react\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { ProductsService } from \"../../service/ProductsService\"\n\nexport const ProductUnitTypeSelector = ({ onSelectUnitType, selectedUnitType }) => {\n  const [currentUnitType, setCurrentUnitType] = useState(selectedUnitType)\n  const [unitTypes, setUnitTypes] = useState([])\n  const service = new ProductsService()\n\n  useEffect(() => service.getUnitTypes(handleUnitTypes), [])\n  useEffect(() => setCurrentUnitType(selectedUnitType), [selectedUnitType])\n\n  const handleUnitTypes = (values) => {\n    setUnitTypes(values)\n  }\n\n  const handleSelectionChange = (value) => {\n    setCurrentUnitType(value)\n\n    if (onSelectUnitType) {\n      onSelectUnitType(value)\n    }\n  }\n  return (\n    <Dropdown\n      id=\"unitType\"\n      placeholder={\"\"}\n      filter={true}\n      dataKey=\"unitTypeId\"\n      options={unitTypes}\n      showClear={true}\n      value={currentUnitType}\n      optionLabel=\"unitName\"\n      onChange={(e) => handleSelectionChange(e.value)}\n    />\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/core/SearchPersonsFilter.js",[],"/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/customers/CustomersInventory.js",["343"],"import React, { useEffect, useState } from \"react\"\nimport { Button } from \"primereact/button\"\nimport { CustomersService } from \"../../service/CustomersService\"\nimport { SearchPersonsFilter } from \"../core/SearchPersonsFilter\"\nimport { DataTable } from \"primereact/datatable\"\nimport { Column } from \"primereact/column\"\nimport _ from \"lodash\"\n\nconst CUSTOMER_COLUMNS = [\n  { field: \"personId\", header: \"Id\" },\n  { field: \"businessName\", header: \"Nombre\" },\n  { field: \"identification\", header: \"Identificación\" },\n  { field: \"fantasyName\", header: \"Nombre Fantasía\" },\n  { field: \"email\", header: \"e-mail\" },\n  { field: \"address\", header: \"Dirección\" },\n]\n\nexport const CustomersInventory = () => {\n  const [loading, setLoading] = useState(false)\n  const [customers, setCustomers] = useState([])\n  const [totalRecords, setTotalRecords] = useState(0)\n  const rowsPerPage = 20\n  const [first, setFirst] = useState(0)\n  const [searchFilter, setSearchFilter] = useState({\n    activo: true,\n    cliente: true,\n    sortFields: [\n      {\n        fieldName: \"razonSocial\",\n        ascending: true,\n      },\n    ],\n  })\n  useEffect(() => {\n    onPageEvent({ first: 0 })\n  }, [searchFilter])\n  const customersService = new CustomersService()\n\n  const fillSearchFilter = (searchCriteria) => {\n    setSearchFilter({ ...searchFilter, ...searchCriteria })\n  }\n\n  const renderFilterSection = () => {\n    return (\n      <SearchPersonsFilter\n        searchCustomersCallback={fillSearchFilter}\n        loading={loading}\n      />\n    )\n  }\n\n  const onPageEvent = (event) => {\n    const searchOptions = {\n      firstResult: event.first,\n      maxResults: rowsPerPage,\n      searchFilter: searchFilter,\n    }\n\n    customersService.searchCustomers(searchOptions, handleSuccess)\n\n    setLoading(true)\n    setFirst(event.first)\n  }\n\n  const handleSuccess = (data) => {\n    setTotalRecords(data.totalResults)\n    setCustomers(data.data)\n    setLoading(false)\n  }\n\n  const getLinkActions = (rowData) => {\n    const { personId } = rowData\n\n    return (\n      <Button\n        type=\"button\"\n        icon=\"fa fa-fw fa-edit\"\n        onClick={() => handleEditCustomer(personId)}\n      />\n    )\n  }\n\n  const handleEditCustomer = (customerId) => {\n    window.open(`#/customer/${customerId}`, \"_blank\")\n  }\n\n  const renderColumns = () => {\n    let columns = CUSTOMER_COLUMNS.map((col, i) => {\n      return (\n        <Column\n          key={col.field}\n          field={col.field}\n          header={col.header}\n          style={col.style}\n          body={(rowData) => _.get(rowData, col.field)}\n        />\n      )\n    })\n\n    columns.push(<Column body={getLinkActions} />)\n\n    return columns\n  }\n\n  const renderSearchResults = () => {\n    return (\n      <DataTable\n        value={customers}\n        dataKey={\"personId\"}\n        paginator={true}\n        rows={rowsPerPage}\n        totalRecords={totalRecords}\n        lazy={true}\n        first={first}\n        onPage={onPageEvent}\n        loading={loading}\n        loadingIcon=\"fa fa-fw fa-spin fa-spinner\"\n        resizableColumns\n      >\n        {renderColumns()}\n      </DataTable>\n    )\n  }\n\n  return (\n    <div className=\"card card-w-title\">\n      <h1>Mayor de clientes</h1>\n      {renderFilterSection()}\n      <Button\n        type=\"button\"\n        label={\"Nuevo\"}\n        icon=\"fa fa-fw fa-plus\"\n        onClick={() => window.open(`#/customer/`, \"_blank\")}\n      />\n      {renderSearchResults()}\n    </div>\n  )\n}\n","/home/rodrigo/UI_Projects/gt-retail/webapp/src/components/customers/CustomerDetails.js",["344","345","346","347","348","349"],"import _ from \"lodash\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { FieldError, Form } from \"react-jsonschema-form-validation\"\nimport { CustomersService } from \"../../service/CustomersService\"\nimport { InputText } from \"primereact/inputtext\"\nimport Field from \"react-jsonschema-form-validation/dist/Field\"\nimport {\n  emailInvalidFormatMessage,\n  fieldRequiredDefaultMessage,\n  invalidPatternMessage,\n} from \"../../custom-error-form.messages\"\nimport { Dropdown } from \"primereact/dropdown\"\nimport { LoadingButton } from \"../core/LoadingButton\"\nimport { Button } from \"primereact/button\"\nimport { Toast } from \"primereact/toast\"\nimport { Checkbox } from \"primereact/checkbox\"\nimport { DataTable } from \"primereact/datatable\"\nimport { Column } from \"primereact/column\"\n\nconst newCustomerSchema = {\n  type: \"object\",\n  properties: {\n    email: { type: \"string\", format: \"email\" },\n    razonSocial: {\n      type: \"string\",\n      minLength: 1,\n      maxLength: 200,\n      pattern: \"^[a-zA-ZñÑ,.. ]*$\",\n    },\n    apellidos: {\n      type: \"string\",\n      minLength: 1,\n      maxLength: 60,\n      pattern: \"^[a-zA-ZñÑ. ]*$\",\n    },\n    nombres: {\n      type: \"string\",\n      minLength: 1,\n      maxLength: 60,\n      pattern: \"^[a-zA-ZñÑ. ]*$\",\n    },\n    nombreFantasia: { type: \"string\", maxLength: 200 },\n    calle: { type: \"string\", maxLength: 100, pattern: \"^[-a-zA-Z0-9.. ]*$\" },\n    altura: { type: \"string\", maxLength: 50, pattern: \"^[-0-9]*$\" },\n    piso: { type: \"string\", maxLength: 3, pattern: \"^[-0-9]*$\" },\n    depto: { type: \"string\", maxLength: 5, pattern: \"^[-a-zA-Z0-9]*$\" },\n    documento: { type: \"string\", minLength: 7, maxLength: 13, pattern: \"^[0-9]*$\" },\n    tipoPersoneria: { type: \"object\" },\n    genero: { type: \"object\" },\n    tipoDocumento: { type: \"object\" },\n    responsabilidadIva: { type: \"object\" },\n    pais: { type: \"object\" },\n    provincia: { type: \"object\" },\n    localidad: { type: \"object\" },\n    activo: { type: \"boolean\" },\n    telefonos: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        properties: {\n          areaCode: { type: \"string\", minLength: 3, maxLength: 5 },\n          number: { type: \"string\", minLength: 6, maxLength: 9 },\n          reference: { type: \"string\" },\n        },\n        required: [\"areaCode\", \"number\"],\n      },\n    },\n  },\n  required: [\n    \"documento\",\n    \"tipoPersoneria\",\n    \"genero\",\n    \"tipoDocumento\",\n    \"calle\",\n    \"altura\",\n    \"piso\",\n    \"depto\",\n    \"responsabilidadIva\",\n    \"pais\",\n    \"provincia\",\n    \"localidad\",\n  ],\n}\n\nexport const CustomerDetails = (props) => {\n  const customersService = new CustomersService()\n\n  const [loading, setLoading] = useState(false)\n  const [saveDisabled, setSaveDisabled] = useState(false)\n\n  const [legalStatusTypes, setLegalStatusTypes] = useState([])\n  const [genders, setGenders] = useState([])\n  const [responsabilidadesIva, setResponsabilidadesIva] = useState([])\n  const [countries, setCountries] = useState([])\n  const [provinces, setProvinces] = useState([])\n  const [towns, setTowns] = useState([])\n  const [identificationTypes, setIdentificationTypes] = useState([])\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    documento: \"\",\n    tipoPersoneria: null,\n    genero: null,\n    tipoDocumento: null,\n    razonSocial: \"\",\n    apellidos: \"\",\n    nombres: \"\",\n    nombreFantasia: \"\",\n    calle: \"-\",\n    altura: \"-\",\n    depto: \"-\",\n    piso: \"-\",\n    responsabilidadIva: null,\n    pais: null,\n    provincia: null,\n    localidad: null,\n    activo: true,\n    telefonos: [],\n  })\n\n  const [customerId, setCustomerId] = useState(props.match.params.customerId)\n  const [editingCustomer, setEditingCustomer] = useState(null)\n\n  const toast = useRef(null)\n\n  useEffect(() => {\n    customersService.getLegalStatusTypes((data) => {\n      setLegalStatusTypes(data)\n    })\n    customersService.getResponsabilidadesIva(setResponsabilidadesIva)\n    customersService.getCountries(setCountries)\n  }, [])\n\n  useEffect(() => {\n    customersService.getCustomer(customerId, loadCustomer)\n  }, [customerId])\n\n  useEffect(() => {\n    const { tipoPersoneria } = formData\n\n    if (tipoPersoneria) {\n      customersService.getGenders(tipoPersoneria.id, (data) => {\n        setGenders(data)\n        //setGenero(data[0])\n      })\n      customersService.getIdentificationTypes(tipoPersoneria.id, (data) => {\n        setIdentificationTypes(data)\n        //setTipoDocumento(data[0])\n      })\n    }\n  }, [formData?.tipoPersoneria])\n  useEffect(() => {\n    if (formData.pais) {\n      //setProvincia(null)\n      //setLocalidad(null)\n      setProvinces([])\n      setTowns([])\n      customersService.getProvinces(formData.pais.id, setProvinces)\n    }\n  }, [formData?.pais])\n  useEffect(() => {\n    if (formData.provincia) {\n      //setLocalidad(null)\n      setTowns([])\n      customersService.getTowns(formData.provincia.id, \"\", setTowns)\n    }\n  }, [formData?.provincia])\n\n  const loadCustomer = (customer) => {\n    setEditingCustomer(customer)\n\n    const customerData = {\n      customerId: customer.customerId,\n      email: customer.email,\n      nombres: customer.nombres,\n      apellidos: customer.apellidos,\n      razonSocial: customer.razonSocial,\n      version: customer.version,\n      documento: customer.documento,\n      calle: customer.calle,\n      altura: customer.altura,\n      piso: customer.piso,\n      depto: customer.depto,\n      pais: customer.pais,\n      provincia: customer.provincia,\n      localidad: customer.localidad,\n      genero: customer.genero,\n      tipoPersoneria: customer.tipoPersoneria,\n      tipoDocumento: customer.tipoDocumento,\n      nombreFantasia: customer.fantasyName || \"\",\n      responsabilidadIva: customer.tipoResponsableIva,\n      activo: customer.activo,\n      telefonos: transformPhones(customer.phones),\n    }\n    setFormData({ ...formData, ...customerData })\n  }\n\n  const transformPhones = (phones) => {\n    if (phones) {\n      return phones.map((phone) => {\n        const areaCode = phone.phoneNumber.split(\" \")[0]\n        const number = phone.phoneNumber.split(\" \")[1]\n        return {\n          areaCode: areaCode,\n          number: number,\n          reference: phone.reference,\n          version: phone.version,\n          id: phone.id,\n        }\n      })\n    }\n  }\n\n  const getValidationSchema = () => {\n    let validationSchema = _.cloneDeep(newCustomerSchema)\n    const { tipoPersoneria } = formData\n    if (tipoPersoneria) {\n      if (tipoPersoneria.id === 2) {\n        validationSchema.required = validationSchema.required.concat(\"razonSocial\")\n      } else {\n        validationSchema.required = validationSchema.required.concat(\n          \"nombres\",\n          \"apellidos\"\n        )\n      }\n    }\n    return validationSchema\n  }\n\n  const getLegalPersonFields = () => {\n    const { tipoPersoneria } = formData\n\n    if (tipoPersoneria?.id === 2) {\n      return (\n        <div className=\"p-col-12\">\n          <label htmlFor=\"razonSocial\">Razón Social:</label>\n\n          <Field\n            id=\"razonSocial\"\n            component={InputText}\n            name=\"razonSocial\"\n            value={formData.razonSocial}\n          />\n          <FieldError name=\"razonSocial\" />\n        </div>\n      )\n    }\n  }\n\n  const getRegularPersonFields = () => {\n    const { tipoPersoneria } = formData\n\n    if (tipoPersoneria?.id === 1) {\n      return (\n        <>\n          <div className=\"p-col-6\">\n            <label htmlFor=\"apellidos\">Apellidos:</label>\n\n            <Field\n              id=\"apellidos\"\n              component={InputText}\n              name=\"apellidos\"\n              value={formData.apellidos}\n            />\n            <FieldError name=\"apellidos\" />\n          </div>\n\n          <div className=\"p-col-6\">\n            <label htmlFor=\"nombres\">Nombres:</label>\n\n            <Field\n              id=\"nombres\"\n              component={InputText}\n              name=\"nombres\"\n              value={formData.nombres}\n            />\n            <FieldError name=\"nombres\" />\n          </div>\n        </>\n      )\n    }\n  }\n\n  const handleChange = (newData) => {\n    setFormData(newData)\n  }\n\n  const handleExistingCustomer = (customer) => {\n    if (customer.customerId != customerId) {\n      toast.current.show({\n        severity: \"error\",\n        summary: \"Ya existe un cliente con estos datos\",\n        detail: `${customer.businessName} ${customer.identification}`,\n      })\n\n      setSaveDisabled(true)\n    }\n  }\n\n  const handleNotExistentCustomer = (error) => {\n    if (error.errorCode === \"404002\") {\n      setSaveDisabled(false)\n    }\n  }\n\n  const checkExistingCustomer = () => {\n    const { tipoDocumento, documento } = formData\n\n    if (tipoDocumento && documento) {\n      const searchData = {\n        idTipoDocumento: tipoDocumento.id,\n        documento: documento,\n      }\n      customersService.retrieveCustomer(\n        searchData,\n        handleExistingCustomer,\n        handleNotExistentCustomer\n      )\n    } else {\n      setSaveDisabled(true)\n    }\n  }\n\n  const handleSubmit = () => {\n    setLoading(true)\n\n    if (editingCustomer) {\n      const customerToEdit = {\n        ...formData,\n        ...{\n          customerId: editingCustomer.customerId,\n          version: editingCustomer.version,\n        },\n      }\n      customersService.updateCustomer(customerToEdit, handleSuccess, handleError)\n    } else {\n      customersService.addNewCustomer(formData, handleSuccess, handleError)\n    }\n  }\n\n  const handleSuccess = (createdCustomer) => {\n    setLoading(false)\n    if (createdCustomer) {\n      setCustomerId(createdCustomer.customerId)\n    } else {\n      customersService.getCustomer(customerId, loadCustomer)\n    }\n    toast.current.show({\n      severity: \"success\",\n      summary: \"Cliente guardado con éxito\",\n    })\n  }\n\n  const handleError = (error) => {\n    let detail = \"Error desconocido\"\n\n    setLoading(false)\n\n    if (_.get(error, \"errorCode\") === \"400999\") {\n      detail = error.fieldErrors.map((errorField) => {\n        return errorField + \"\\n\"\n      })\n    }\n    if (_.get(error, \"errorCode\") === \"400001\") {\n      detail = error.message\n    }\n\n    toast.current.show({\n      severity: \"error\",\n      summary: \"No se pudo guardar el cliente\",\n      detail: detail,\n      sticky: true,\n    })\n  }\n\n  const getTitle = () => {\n    if (customerId) {\n      return `Edición de cliente: ${customerId}`\n    }\n    return \"Nuevo cliente\"\n  }\n\n  const getTelefonosTableHeader = () => {\n    return (\n      <div className=\"p-fluid \">\n        <div className=\"p-grid \">\n          <div className=\"p-col-11\">Teléfonos</div>\n          <div className=\"p-col-1\">\n            <Button\n              type=\"button\"\n              className=\"p-button-success\"\n              icon=\"fa fa-fw fa-plus\"\n              onClick={addNewPhone}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const addNewPhone = () => {\n    formData.telefonos.splice(0, 0, { areaCode: \"0\", number: \"\", reference: \"\" })\n\n    handleChange(formData)\n  }\n\n  const inputTextEditor = (props, field) => {\n    return (\n      <div>\n        <Field\n          component={InputText}\n          name={field}\n          onChange={(e) => onEditorValueChange(props, e.target.value)}\n          value={props.rowData[field]}\n        />\n        <FieldError name={`telefonos.${props.rowIndex}.${field}`} />\n      </div>\n    )\n  }\n\n  const onEditorValueChange = (props, value) => {\n    let updatedTelefonos = [...props.value]\n    let updatedFormData = { ...{}, ...formData }\n    updatedTelefonos[props.rowIndex][props.field] = value\n\n    updatedFormData.telefonos = updatedTelefonos\n\n    handleChange(updatedFormData)\n  }\n\n  return (\n    <div className=\"card card-w-title\">\n      <h1>{getTitle()}</h1>\n      <Toast ref={toast} />\n      <Form\n        data={formData}\n        schema={getValidationSchema()}\n        errorMessages={{\n          required: () => fieldRequiredDefaultMessage,\n          pattern: () => invalidPatternMessage,\n        }}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"card p-fluid \">\n          <div className=\"p-grid \">\n            <div className=\"p-col-6\">\n              <label htmlFor=\"tipoPersoneria\">Tipo Personería:</label>\n\n              <Field\n                component={Dropdown}\n                options={legalStatusTypes}\n                optionLabel=\"nombreTipo\"\n                name=\"tipoPersoneria\"\n                dataKey=\"id\"\n                value={formData.tipoPersoneria}\n              />\n\n              <FieldError name=\"tipoPersoneria\" />\n            </div>\n\n            <div className=\"p-col-6\">\n              <label htmlFor=\"genero\">Género:</label>\n\n              <Field\n                component={Dropdown}\n                options={genders}\n                optionLabel=\"nombreGenero\"\n                dataKey=\"id\"\n                name=\"genero\"\n                value={formData.genero}\n              />\n\n              <FieldError name=\"genero\" />\n            </div>\n\n            <div className=\"p-col-3\">\n              <label htmlFor=\"tipoDocumento\">Tipo Documento:</label>\n\n              <Field\n                component={Dropdown}\n                options={identificationTypes}\n                optionLabel=\"identificationTypeName\"\n                name=\"tipoDocumento\"\n                dataKey=\"id\"\n                value={formData.tipoDocumento}\n              />\n\n              <FieldError name=\"tipoDocumento\" />\n            </div>\n            <div className=\"p-col-9\">\n              <label htmlFor=\"documento\">Número:</label>\n\n              <div className=\"p-inputgroup\">\n                <Field\n                  id=\"documento\"\n                  component={InputText}\n                  name=\"documento\"\n                  mode=\"decimal\"\n                  useGrouping={false}\n                  onBlur={checkExistingCustomer}\n                  value={formData.documento}\n                />\n              </div>\n              <FieldError name=\"documento\" />\n            </div>\n\n            {getLegalPersonFields()}\n            {getRegularPersonFields()}\n\n            <div className=\"p-col-12\">\n              <label htmlFor=\"nombreFantasia\">Nombre Fantasía:</label>\n\n              <Field\n                id=\"nombreFantasia\"\n                component={InputText}\n                name=\"nombreFantasia\"\n                value={formData.nombreFantasia}\n              />\n              <FieldError name=\"nombreFantasia\" />\n            </div>\n\n            <div className=\"p-col-12\">\n              <label htmlFor=\"responsabilidadIva\">Responsabilidad IVA:</label>\n\n              <Field\n                component={Dropdown}\n                //onChange={(newVal, handleFieldChange) => handleFieldChange('responsabilidadIva', newVal)}\n                options={responsabilidadesIva}\n                optionLabel=\"nombreResponsabildiad\"\n                name=\"responsabilidadIva\"\n                dataKey=\"id\"\n                value={formData.responsabilidadIva}\n              />\n\n              <FieldError name=\"responsabilidadIva\" />\n            </div>\n\n            <div className=\"p-col-4\">\n              <label htmlFor=\"pais\">País:</label>\n\n              <Field\n                component={Dropdown}\n                options={countries}\n                optionLabel=\"nombrePais\"\n                dataKey=\"id\"\n                name=\"pais\"\n                value={formData.pais}\n              />\n\n              <FieldError name=\"pais\" />\n            </div>\n            <div className=\"p-col-4\">\n              <label htmlFor=\"provincia\">Provincia:</label>\n\n              <Field\n                component={Dropdown}\n                options={provinces}\n                optionLabel=\"nombreProvincia\"\n                dataKey=\"id\"\n                name=\"provincia\"\n                value={formData.provincia}\n              />\n\n              <FieldError name=\"provincia\" />\n            </div>\n\n            <div className=\"p-col-4\">\n              <label htmlFor=\"localidad\">Localidad:</label>\n\n              <Field\n                component={Dropdown}\n                options={towns}\n                optionLabel=\"nombreLocalidad\"\n                dataKey=\"id\"\n                name=\"localidad\"\n                value={formData.localidad}\n              />\n\n              <FieldError name=\"localidad\" />\n            </div>\n\n            <div className=\"p-col-3\">\n              <label htmlFor=\"calle\">Calle:</label>\n\n              <Field\n                id=\"calle\"\n                component={InputText}\n                name=\"calle\"\n                onFocus={(e) => e.target.select()}\n                value={formData.calle}\n              />\n              <FieldError name=\"calle\" />\n            </div>\n\n            <div className=\"p-col-3\">\n              <label htmlFor=\"altura\">Altura:</label>\n\n              <Field\n                id=\"altura\"\n                component={InputText}\n                name=\"altura\"\n                onFocus={(e) => e.target.select()}\n                value={formData.altura}\n              />\n              <FieldError name=\"altura\" />\n            </div>\n\n            <div className=\"p-col-3\">\n              <label htmlFor=\"piso\">Piso:</label>\n\n              <Field\n                id=\"piso\"\n                component={InputText}\n                name=\"piso\"\n                onFocus={(e) => e.target.select()}\n                value={formData.piso}\n              />\n              <FieldError name=\"piso\" />\n            </div>\n\n            <div className=\"p-col-3\">\n              <label htmlFor=\"depto\">Dpto:</label>\n\n              <Field\n                id=\"depto\"\n                component={InputText}\n                name=\"depto\"\n                onFocus={(e) => e.target.select()}\n                value={formData.depto}\n              />\n              <FieldError name=\"depto\" />\n            </div>\n\n            <div className=\"SeparatorFull p-col-12\" />\n\n            <div className=\"p-col-12\">\n              <DataTable\n                value={formData.telefonos}\n                header={getTelefonosTableHeader()}\n                editable\n                emptyMessage=\"Agregue un teléfono para el cliente\"\n              >\n                <Column\n                  header=\"Código de área\"\n                  field=\"areaCode\"\n                  editor={(props) => {\n                    return inputTextEditor(props, \"areaCode\")\n                  }}\n                />\n                <Column\n                  header=\"Número\"\n                  field=\"number\"\n                  editor={(props) => {\n                    return inputTextEditor(props, \"number\")\n                  }}\n                />\n                <Column\n                  header=\"Referencia\"\n                  field=\"reference\"\n                  editor={(props) => {\n                    return inputTextEditor(props, \"reference\")\n                  }}\n                />\n              </DataTable>\n            </div>\n\n            <div className=\"p-col-12\">\n              <label htmlFor=\"email\">Email:</label>\n              <Field\n                id=\"email\"\n                component={InputText}\n                name=\"email\"\n                value={formData.email}\n              />\n              <FieldError\n                errorMessages={{ format: () => emailInvalidFormatMessage }}\n                name=\"email\"\n              />\n            </div>\n\n            <div className=\"p-col-12\">\n              <label htmlFor=\"activo\">Activo:</label>\n              <Field\n                id=\"active\"\n                component={Checkbox}\n                name=\"activo\"\n                checked={formData.activo}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"SeparatorFull\" />\n\n        <LoadingButton\n          type=\"submit\"\n          label=\"Guardar\"\n          loading={loading}\n          icon=\"fa fa-fw fa-save\"\n          disabled={saveDisabled}\n        />\n        <Button\n          type=\"button\"\n          label=\"Cerrar\"\n          className=\"p-button-secondary\"\n          icon=\"fa fa-fw fa-arrow-left\"\n          onClick={() => {\n            window.close()\n          }}\n        />\n      </Form>\n    </div>\n  )\n}\n",{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":24,"column":5,"nodeType":"356","endLine":24,"endColumn":13,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":26},{"ruleId":"358","severity":1,"message":"362","line":2,"column":28,"nodeType":"360","messageId":"361","endLine":2,"endColumn":37},{"ruleId":"358","severity":1,"message":"363","line":33,"column":16,"nodeType":"360","messageId":"361","endLine":33,"endColumn":23},{"ruleId":"354","severity":1,"message":"355","line":17,"column":69,"nodeType":"356","endLine":17,"endColumn":71,"suggestions":"364"},{"ruleId":"350","replacedBy":"365"},{"ruleId":"352","replacedBy":"366"},{"ruleId":"354","severity":1,"message":"367","line":10,"column":60,"nodeType":"356","endLine":10,"endColumn":62,"suggestions":"368"},{"ruleId":"354","severity":1,"message":"367","line":17,"column":6,"nodeType":"356","endLine":17,"endColumn":18,"suggestions":"369"},{"ruleId":"354","severity":1,"message":"367","line":10,"column":55,"nodeType":"356","endLine":10,"endColumn":57,"suggestions":"370"},{"ruleId":"358","severity":1,"message":"371","line":102,"column":10,"nodeType":"360","messageId":"361","endLine":102,"endColumn":24},{"ruleId":"354","severity":1,"message":"372","line":116,"column":6,"nodeType":"356","endLine":116,"endColumn":17,"suggestions":"373"},{"ruleId":"354","severity":1,"message":"367","line":10,"column":56,"nodeType":"356","endLine":10,"endColumn":58,"suggestions":"374"},{"ruleId":"354","severity":1,"message":"367","line":10,"column":64,"nodeType":"356","endLine":10,"endColumn":66,"suggestions":"375"},{"ruleId":"354","severity":1,"message":"367","line":10,"column":60,"nodeType":"356","endLine":10,"endColumn":62,"suggestions":"376"},{"ruleId":"354","severity":1,"message":"367","line":13,"column":65,"nodeType":"356","endLine":13,"endColumn":67,"suggestions":"377"},{"ruleId":"354","severity":1,"message":"367","line":10,"column":58,"nodeType":"356","endLine":10,"endColumn":60,"suggestions":"378"},{"ruleId":"354","severity":1,"message":"379","line":36,"column":6,"nodeType":"356","endLine":36,"endColumn":20,"suggestions":"380"},{"ruleId":"354","severity":1,"message":"381","line":132,"column":6,"nodeType":"356","endLine":132,"endColumn":8,"suggestions":"382"},{"ruleId":"354","severity":1,"message":"383","line":136,"column":6,"nodeType":"356","endLine":136,"endColumn":18,"suggestions":"384"},{"ruleId":"354","severity":1,"message":"385","line":151,"column":6,"nodeType":"356","endLine":151,"endColumn":32,"suggestions":"386"},{"ruleId":"354","severity":1,"message":"381","line":160,"column":6,"nodeType":"356","endLine":160,"endColumn":22,"suggestions":"387"},{"ruleId":"354","severity":1,"message":"381","line":167,"column":6,"nodeType":"356","endLine":167,"endColumn":27,"suggestions":"388"},{"ruleId":"389","severity":1,"message":"390","line":289,"column":29,"nodeType":"391","messageId":"392","endLine":289,"endColumn":31},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'salesService'. Either include it or remove the dependency array.","ArrayExpression",["395"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setRows' is assigned a value but never used.",["396"],["393"],["394"],"React Hook useEffect has a missing dependency: 'service'. Either include it or remove the dependency array.",["397"],["398"],["399"],"'editingProduct' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleGetProductInfo' and 'productsService'. Either include them or remove the dependency array.",["400"],["401"],["402"],["403"],["404"],["405"],"React Hook useEffect has a missing dependency: 'onPageEvent'. Either include it or remove the dependency array.",["406"],"React Hook useEffect has a missing dependency: 'customersService'. Either include it or remove the dependency array.",["407"],"React Hook useEffect has missing dependencies: 'customersService' and 'loadCustomer'. Either include them or remove the dependency array.",["408"],"React Hook useEffect has missing dependencies: 'customersService' and 'formData'. Either include them or remove the dependency array.",["409"],["410"],["411"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"416","fix":"420"},{"desc":"421","fix":"422"},{"desc":"416","fix":"423"},{"desc":"416","fix":"424"},{"desc":"416","fix":"425"},{"desc":"416","fix":"426"},{"desc":"416","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},"Update the dependencies array to be: [saleId, salesService]",{"range":"440","text":"441"},"Update the dependencies array to be: [salesService]",{"range":"442","text":"443"},"Update the dependencies array to be: [service]",{"range":"444","text":"445"},"Update the dependencies array to be: [categoryId, service]",{"range":"446","text":"447"},{"range":"448","text":"445"},"Update the dependencies array to be: [handleGetProductInfo, productId, productsService]",{"range":"449","text":"450"},{"range":"451","text":"445"},{"range":"452","text":"445"},{"range":"453","text":"445"},{"range":"454","text":"445"},{"range":"455","text":"445"},"Update the dependencies array to be: [onPageEvent, searchFilter]",{"range":"456","text":"457"},"Update the dependencies array to be: [customersService]",{"range":"458","text":"459"},"Update the dependencies array to be: [customerId, customersService, loadCustomer]",{"range":"460","text":"461"},"Update the dependencies array to be: [customersService, formData, formData.tipoPersoneria]",{"range":"462","text":"463"},"Update the dependencies array to be: [customersService, formData.pais]",{"range":"464","text":"465"},"Update the dependencies array to be: [customersService, formData.provincia]",{"range":"466","text":"467"},[897,905],"[saleId, salesService]",[701,703],"[salesService]",[475,477],"[service]",[578,590],"[categoryId, service]",[431,433],[3678,3689],"[handleGetProductInfo, productId, productsService]",[474,476],[469,471],[454,456],[498,500],[470,472],[1164,1178],"[onPageEvent, searchFilter]",[3970,3972],"[customersService]",[4059,4071],"[customerId, customersService, loadCustomer]",[4459,4485],"[customersService, formData, formData.tipoPersoneria]",[4707,4723],"[customersService, formData.pais]",[4901,4922],"[customersService, formData.provincia]"]